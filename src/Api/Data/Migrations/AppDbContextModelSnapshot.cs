// <auto-generated />
using System;
using Api.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Features.Projects.Domain.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_project");

                    b.ToTable("project", "dbo");
                });

            modelBuilder.Entity("Api.Features.Projects.Domain.Project", b =>
                {
                    b.OwnsMany("Api.Features.Projects.Domain.Entities.Conversation", "Conversations", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uuid")
                                .HasColumnName("project_id");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Collection")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("collection");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<long?>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("created_by");

                            b1.Property<bool>("IsDeleted")
                                .HasColumnType("boolean")
                                .HasColumnName("is_deleted");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("last_modified");

                            b1.Property<Guid?>("LastModifiedBy")
                                .HasColumnType("uuid")
                                .HasColumnName("last_modified_by");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("title");

                            b1.Property<long>("Version")
                                .HasColumnType("bigint")
                                .HasColumnName("version");

                            b1.HasKey("ProjectId", "Id")
                                .HasName("pk_conversation");

                            b1.ToTable("conversation", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId")
                                .HasConstraintName("fk_conversation_project_project_id");

                            b1.OwnsMany("Api.Features.Projects.Domain.ValueObjects.ChatMessage", "ChatMessages", b2 =>
                                {
                                    b2.Property<Guid>("ConversationProjectId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("conversation_project_id");

                                    b2.Property<Guid>("ConversationId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("conversation_id");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasColumnName("id");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Content")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("content");

                                    b2.Property<int>("Order")
                                        .HasColumnType("integer")
                                        .HasColumnName("order");

                                    b2.Property<string>("Role")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("role");

                                    b2.HasKey("ConversationProjectId", "ConversationId", "Id")
                                        .HasName("pk_chat_message");

                                    b2.ToTable("chat_message", "dbo");

                                    b2.WithOwner()
                                        .HasForeignKey("ConversationProjectId", "ConversationId")
                                        .HasConstraintName("fk_chat_message_conversation_conversation_project_id_conversat");
                                });

                            b1.Navigation("ChatMessages");
                        });

                    b.OwnsMany("Api.Features.Projects.Domain.Entities.Document", "Documents", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uuid")
                                .HasColumnName("project_id");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("ContentHash")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("content_hash");

                            b1.Property<string>("ContentType")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("content_type");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<long?>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("created_by");

                            b1.Property<bool>("IsDeleted")
                                .HasColumnType("boolean")
                                .HasColumnName("is_deleted");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("last_modified");

                            b1.Property<Guid?>("LastModifiedBy")
                                .HasColumnType("uuid")
                                .HasColumnName("last_modified_by");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("name");

                            b1.Property<long>("Version")
                                .HasColumnType("bigint")
                                .HasColumnName("version");

                            b1.HasKey("ProjectId", "Id")
                                .HasName("pk_document");

                            b1.ToTable("document", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId")
                                .HasConstraintName("fk_document_project_project_id");
                        });

                    b.OwnsOne("Api.Features.Projects.Domain.ValueObjects.GithubUrl", "GithubUrl", b1 =>
                        {
                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("github_url");

                            b1.HasKey("ProjectId");

                            b1.ToTable("project", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId")
                                .HasConstraintName("fk_project_project_id");
                        });

                    b.Navigation("Conversations");

                    b.Navigation("Documents");

                    b.Navigation("GithubUrl");
                });
#pragma warning restore 612, 618
        }
    }
}
